# SLAM-Share ROS Server Container with GUI Visualization
# Runs ROS master + SLAM processing + real-time 3D visualization
FROM slam-share:latest

# Install ROS Melodic (same as client)
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu bionic main" > /etc/apt/sources.list.d/ros-latest.list' && \
    apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 && \
    apt-get update && \
    apt-get install -y ros-melodic-desktop-full \
                       ros-melodic-cv-bridge \
                       ros-melodic-image-transport \
                       ros-melodic-sensor-msgs \
                       python-rosdep \
                       python-rosinstall \
                       python-rosinstall-generator \
                       python-wstool && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install GUI and X11 dependencies for visualization
RUN apt-get update && \
    apt-get install -y x11-apps \
                       x11-utils \
                       x11-xserver-utils \
                       xvfb \
                       mesa-utils \
                       libgl1-mesa-glx \
                       libglu1-mesa \
                       freeglut3-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Initialize rosdep
RUN rosdep init && rosdep update

# Setup ROS environment for server (ROS master)
RUN echo "source /opt/ros/melodic/setup.bash" >> ~/.bashrc
ENV ROS_MASTER_URI=http://localhost:11311
ENV ROS_HOSTNAME=slam-server

# Create ROS workspace and build with AR support
WORKDIR /slam-share/Examples/ROS/ORB_SLAM3

# Build ROS examples including AR visualization
RUN /bin/bash -c "source /opt/ros/melodic/setup.bash && \
    export ROS_PACKAGE_PATH=/slam-share/Examples/ROS/ORB_SLAM3:$ROS_PACKAGE_PATH && \
    rosmake --pre-clean ORB_SLAM3"

# Create server working directory
WORKDIR /slam-share-ros-server
RUN mkdir -p logs results config gui

# Copy camera configuration
RUN cp /slam-share/Examples/ROS/ORB_SLAM3/Asus.yaml /slam-share-ros-server/config/

# Create ROS master startup script
RUN echo '#!/bin/bash' > /slam-share-ros-server/start-ros-master.sh && \
    echo 'echo "=== Starting ROS Master ==="' >> /slam-share-ros-server/start-ros-master.sh && \
    echo 'source /opt/ros/melodic/setup.bash' >> /slam-share-ros-server/start-ros-master.sh && \
    echo 'export ROS_MASTER_URI=http://localhost:11311' >> /slam-share-ros-server/start-ros-master.sh && \
    echo 'export ROS_HOSTNAME=slam-server' >> /slam-share-ros-server/start-ros-master.sh && \
    echo 'echo "ROS Master URI: $ROS_MASTER_URI"' >> /slam-share-ros-server/start-ros-master.sh && \
    echo 'echo "ROS Hostname: $ROS_HOSTNAME"' >> /slam-share-ros-server/start-ros-master.sh && \
    echo 'roscore &' >> /slam-share-ros-server/start-ros-master.sh && \
    echo 'sleep 3' >> /slam-share-ros-server/start-ros-master.sh && \
    echo 'echo "ROS Master started successfully"' >> /slam-share-ros-server/start-ros-master.sh && \
    echo 'wait' >> /slam-share-ros-server/start-ros-master.sh && \
    chmod +x /slam-share-ros-server/start-ros-master.sh

# Create AR visualization server script
RUN echo '#!/bin/bash' > /slam-share-ros-server/start-ar-server.sh && \
    echo 'echo "=== SLAM-Share AR Server Starting ==="' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'source /opt/ros/melodic/setup.bash' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'export ROS_MASTER_URI=http://localhost:11311' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'export ROS_HOSTNAME=slam-server' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'export ROS_PACKAGE_PATH=/slam-share/Examples/ROS/ORB_SLAM3:$ROS_PACKAGE_PATH' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'export DISPLAY=${DISPLAY:-:0}' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'echo "Starting ROS Master..."' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'roscore &' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'sleep 5' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'echo "ROS Master ready"' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'echo "Starting AR SLAM Server with GUI..."' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'echo "Display: $DISPLAY"' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'echo "Vocabulary: /slam-share/Vocabulary/ORBvoc.txt"' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'echo "Config: /slam-share-ros-server/config/Asus.yaml"' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'cd /slam-share/Examples/ROS/ORB_SLAM3' >> /slam-share-ros-server/start-ar-server.sh && \
    echo 'rosrun ORB_SLAM3 MonoAR /slam-share/Vocabulary/ORBvoc.txt /slam-share-ros-server/config/Asus.yaml' >> /slam-share-ros-server/start-ar-server.sh && \
    chmod +x /slam-share-ros-server/start-ar-server.sh

# Create basic SLAM server script (without AR)
RUN echo '#!/bin/bash' > /slam-share-ros-server/start-slam-server.sh && \
    echo 'echo "=== SLAM-Share Server Starting ==="' >> /slam-share-ros-server/start-slam-server.sh && \
    echo 'source /opt/ros/melodic/setup.bash' >> /slam-share-ros-server/start-slam-server.sh && \
    echo 'export ROS_MASTER_URI=http://localhost:11311' >> /slam-share-ros-server/start-slam-server.sh && \
    echo 'export ROS_HOSTNAME=slam-server' >> /slam-share-ros-server/start-slam-server.sh && \
    echo 'export ROS_PACKAGE_PATH=/slam-share/Examples/ROS/ORB_SLAM3:$ROS_PACKAGE_PATH' >> /slam-share-ros-server/start-slam-server.sh && \
    echo 'echo "Starting ROS Master..."' >> /slam-share-ros-server/start-slam-server.sh && \
    echo 'roscore &' >> /slam-share-ros-server/start-slam-server.sh && \
    echo 'sleep 5' >> /slam-share-ros-server/start-slam-server.sh && \
    echo 'echo "ROS Master ready"' >> /slam-share-ros-server/start-slam-server.sh && \
    echo 'echo "Starting SLAM Server..."' >> /slam-share-ros-server/start-slam-server.sh && \
    echo 'cd /slam-share/Examples/ROS/ORB_SLAM3' >> /slam-share-ros-server/start-slam-server.sh && \
    echo 'rosrun ORB_SLAM3 Mono /slam-share/Vocabulary/ORBvoc.txt /slam-share-ros-server/config/Asus.yaml' >> /slam-share-ros-server/start-slam-server.sh && \
    chmod +x /slam-share-ros-server/start-slam-server.sh

# Create GUI test script
RUN echo '#!/bin/bash' > /slam-share-ros-server/test-gui.sh && \
    echo 'echo "=== Testing GUI Display ==="' >> /slam-share-ros-server/test-gui.sh && \
    echo 'export DISPLAY=${DISPLAY:-:0}' >> /slam-share-ros-server/test-gui.sh && \
    echo 'echo "Display: $DISPLAY"' >> /slam-share-ros-server/test-gui.sh && \
    echo 'echo "Testing X11 forwarding..."' >> /slam-share-ros-server/test-gui.sh && \
    echo 'xdpyinfo > /dev/null 2>&1 && echo "✅ X11 connection working" || echo "❌ X11 connection failed"' >> /slam-share-ros-server/test-gui.sh && \
    echo 'echo "Testing OpenGL..."' >> /slam-share-ros-server/test-gui.sh && \
    echo 'glxinfo | grep "direct rendering" && echo "✅ OpenGL working" || echo "❌ OpenGL failed"' >> /slam-share-ros-server/test-gui.sh && \
    chmod +x /slam-share-ros-server/test-gui.sh

# Set environment variables
ENV ROS_MASTER_URI=http://localhost:11311
ENV ROS_HOSTNAME=slam-server
ENV DISPLAY=:0

# Expose ROS master port
EXPOSE 11311

# Default command - start AR server with GUI
CMD ["/slam-share-ros-server/start-ar-server.sh"]